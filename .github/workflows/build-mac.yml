name: Build macOS Application

# 触发条件
on:
  # 仅允许手动触发
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'test'
        type: choice
        options:
        - test
        - release

jobs:
  build:
    name: Build macOS App
    runs-on: macos-latest
    
    steps:
    # 1. 检出代码
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    # 2. 设置 Python 环境
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    # 3. 显示系统信息
    - name: Display system info
      run: |
        echo "macOS version:"
        sw_vers
        echo "Python version:"
        python --version
        echo "pip version:"
        pip --version
    
    # 4. 安装依赖
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        echo "Installed packages:"
        pip list
    
    # 5. 创建必要的目录
    - name: Create directories
      run: |
        mkdir -p dist
        mkdir -p build
    
    # 6. 运行打包脚本
    - name: Build macOS application
      run: |
        echo "Starting build process..."
        python mac-pack.py
      continue-on-error: true
    
    # 7. 检查构建结果
    - name: Check build results
      run: |
        echo "Checking dist directory:"
        ls -la dist/
        echo ""
        echo "Checking for app bundle or directory:"
        if [ -d "dist/LMArenaBridge.app" ]; then
          echo "✅ App bundle created successfully"
          echo "App size:"
          du -sh dist/LMArenaBridge.app
          echo ""
          echo "Checking app bundle contents:"
          echo "Contents of LMArenaBridge.app:"
          ls -la dist/LMArenaBridge.app/
          echo ""
          echo "Contents of Resources directory:"
          if [ -d "dist/LMArenaBridge.app/Contents/Resources" ]; then
            ls -la dist/LMArenaBridge.app/Contents/Resources/
          fi
          echo ""
          echo "Checking for TampermonkeyScript:"
          if [ -d "dist/LMArenaBridge.app/Contents/Resources/TampermonkeyScript" ]; then
            echo "✅ TampermonkeyScript directory found"
            ls -la dist/LMArenaBridge.app/Contents/Resources/TampermonkeyScript/
          elif [ -d "dist/LMArenaBridge.app/Contents/MacOS/TampermonkeyScript" ]; then
            echo "✅ TampermonkeyScript directory found in MacOS"
            ls -la dist/LMArenaBridge.app/Contents/MacOS/TampermonkeyScript/
          else
            echo "❌ TampermonkeyScript directory not found in app bundle"
          fi
        elif [ -d "dist/LMArenaBridge" ]; then
          echo "⚠️ Found LMArenaBridge directory instead of .app bundle"
          echo "Directory contents:"
          ls -la dist/LMArenaBridge/
          echo ""
          echo "Attempting to manually create .app bundle..."
          # 手动创建 .app 结构
          mv dist/LMArenaBridge dist/LMArenaBridge.app
          if [ -d "dist/LMArenaBridge.app" ]; then
            echo "✅ Successfully converted to .app bundle"
            echo "App size:"
            du -sh dist/LMArenaBridge.app
          else
            echo "❌ Failed to create .app bundle"
            exit 1
          fi
        else
          echo "❌ Neither app bundle nor directory found"
          exit 1
        fi
    
    # 8. 创建 ZIP 文件（用于分发）
    - name: Create ZIP archive
      run: |
        cd dist
        echo "Files in dist directory before zipping:"
        ls -la
        echo ""
        # 创建包含所有必要文件的 ZIP
        zip -r LMArenaBridge-macOS.zip LMArenaBridge.app *.command *.txt
        echo "ZIP file created:"
        ls -lh *.zip
        echo ""
        echo "Contents of ZIP file:"
        unzip -l LMArenaBridge-macOS.zip
    
    # 9. 上传构建产物
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: LMArenaBridge-macOS-${{ github.sha }}
        path: |
          dist/LMArenaBridge.app
          dist/*.zip
          dist/*.dmg
          dist/*.command
          dist/*.txt
        retention-days: 30
